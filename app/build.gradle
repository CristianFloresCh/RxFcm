plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    //noinspection GradleDependency
    compileSdkVersion 30
    //noinspection GradleDependency
    compileSdk 30
    defaultConfig {
        applicationId "victoralbertos.io.rxfcm"
        minSdkVersion 19
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'victoralbertos.io.rxfcm'
    //lint {
    //    abortOnError false
    //}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':rx_fcm')
    //implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation platform('com.google.firebase:firebase-bom:27.1.0')
    //implementation 'com.google.firebase:firebase-core'
    //implementation 'com.google.firebase:firebase-core:11.6.0'

    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.annotation:annotation:1.3.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.5.1') {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
    }
    implementation 'com.android.support:multidex:1.0.3'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:24.1.1"
}

// enable internal JDK API access at runtime (AGP Fix)
tasks.withType(JavaCompile).configureEach {
    options.fork = true
    options.forkOptions.jvmArgs += [
            // essential for butterknife
            '--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
            // if you need Glide or LomBok
            // these may not be the exact list, but it works for me
            '--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
            '--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED',
    ]
}